//BLOB HELPER
//--------------------------------------------
//PROMENITI-> 	DataConnectionString	- connection string
//				vezba					- naziv blob-a
//				file					- tim koji ce se smestati u blobove


		public CloudBlockBlob CreateBlob(string RowKey, HttpPostedFileBase file)
        {
            string uniqueBlobName = string.Format("image_{0}", RowKey);
            var storageAccount =
            CloudStorageAccount.Parse(CloudConfigurationManager.GetSetting("DataConnectionString"));
            CloudBlobClient blobStorage = storageAccount.CreateCloudBlobClient();
            CloudBlobContainer container = blobStorage.GetContainerReference("vezba");
            CloudBlockBlob blob = container.GetBlockBlobReference(uniqueBlobName);
            blob.Properties.ContentType = file.ContentType;

            return blob;
        }
		
		public UploadFileToContainer(CloudBlockBlob blob,HttpPostedFileBase file)
		{
			blob.UploadFromStream(file.InputStream);
		}
		
		
		//ZASTO JE OVO U GLOBAL.ASAX MOZE LI U WORKER ROLE
		public void InitBlobs()
		{
			try
			{
				 // read account configuration settings
				var storageAccount =
				CloudStorageAccount.Parse(CloudConfigurationManager.GetSetting("DataConnectionStri
				ng"));

				 // create blob container for images
				CloudBlobClient blobStorage = storageAccount.CreateCloudBlobClient();
				CloudBlobContainer container = blobStorage.GetContainerReference("vezba");
				container.CreateIfNotExists();
				 // configure container for public access
				var permissions = container.GetPermissions();
				permissions.PublicAccess = BlobContainerPublicAccessType.Container;
				container.SetPermissions(permissions);
			}
			catch (WebException)
			{
			}
		}